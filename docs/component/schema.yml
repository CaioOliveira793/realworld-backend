AnyType:
  description: Can be any value - string, number, boolean, array or object.
  anyOf:
  - type: string
  - type: number
  - type: integer
  - type: boolean
  - type: array
    items: {}
  - type: object
  nullable: true

OffsetPagination:
  type: object
  properties:
    data:
      type: array
      items:
        type: object
    offset:
      type: integer
      format: int32
      description: number of items skiped in the query
    limit:
      type: integer
      format: int32
      description: maximum count of items returned in the query
    next:
      type: integer
      format: int32
      nullable: true
      description: offset the request should use to query the next items
    previous:
      type: integer
      format: int32
      nullable: true
      description: offset the request should use to query the previous items
    count:
      type: integer
      format: int32
      description: number of items in the response
    total:
      type: integer
      format: int32
      description: total number of items for the query
  required:
  - offset
  - limit
  - next
  - previous
  - count
  - total
  - data

# TODO: remove
Comment:
  required:
    - author
    - body
    - createdAt
    - id
    - updatedAt
  type: object
  properties:
    id:
      type: integer
    createdAt:
      type: string
      format: date-time
    updatedAt:
      type: string
      format: date-time
    body:
      type: string
    author:
      $ref: '#/Profile'

NewComment:
  required:
    - body
  type: object
  properties:
    body:
      type: string

TagsResponse:
  required:
    - tags
  type: object
  properties:
    tags:
      type: array
      items:
        type: string

Token:
  type: apiKey
  description: "For accessing the protected API resources, you must have received\
    \ a a valid JWT token after registering or logging in. This JWT token must\
    \ then be used for all protected resources by passing it in via the 'Authorization'\
    \ header.\n\nA JWT token is generated by the API by either registering via\
    \ /users or logging in via /users/login.\n\nThe following format must be in\
    \ the 'Authorization' header :\n\n    Token xxxxxx.yyyyyyy.zzzzzz\n    \n"
  name: Authorization
  in: header
